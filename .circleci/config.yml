version: 2
# Reference variables.
references:
  docker_default: &docker_7
    working_directory: /tmp/app
    docker:
      - image: node:7
    environment:
      TZ: "/usr/share/zoneinfo/Asia/Taipei"
  docker_default: &docker_8
    working_directory: /tmp/app
    docker:
      - image: node:8
    environment:
      TZ: "/usr/share/zoneinfo/Asia/Taipei"

jobs:
  build-node-7:
    <<: *docker_7
    steps:
      - checkout
      - restore_cache:
          key: node-7-cache-{{checksum "yarn.lock"}}
      - run:
          name: install dependencies
          command: |
            yarn config set cache-folder .yarn-cache
            yarn
      - run:
          name: build
          command: npm run build
      - save_cache:
          key: node-7-cache-{{checksum "yarn.lock"}}
          paths:
            - .yarn-cache
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - lib
  test-node-7:
    <<: *docker_7
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: run test
          command: npm run testonly:cov -- --no-cache
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: junit.xml
  build-node-8:
    <<: *docker_8
    steps:
      - checkout
      - restore_cache:
          key: node-8-cache-{{checksum "yarn.lock"}}
      - run:
          name: install dependencies
          command: |
            yarn config set cache-folder .yarn-cache
            yarn
      - run:
          name: build
          command: npm run build
      - save_cache:
          key: node-8-cache-{{checksum "yarn.lock"}}
          paths:
            - .yarn-cache
            - ./node_modules
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - lib
  lint-node-8:
    <<: *docker_8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: run lint
          command: npm run lint
  type-check-node-8:
    <<: *docker_8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: install dependencies of flow
          command: apt update; apt install libelf1;
      - run:
          name: run check
          command: npm run check
  test-node-8:
    <<: *docker_8
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: run test
          command: npm run testonly:cov -- --no-cache
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: junit.xml

workflows:
  version: 2
  test-on-node-7-and-8:
    jobs:
      - build-node-7
      - test-node-7:
          requires:
            - build-node-7
      - build-node-8
      - lint-node-8:
          requires:
            - build-node-8
      - type-check-node-8:
          requires:
            - build-node-8
      - test-node-8:
          requires:
            - build-node-8
